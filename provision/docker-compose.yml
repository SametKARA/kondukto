version: '4.2'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  mongo-1-1:
    container_name: "mongo-1-1"
    image: ${MONGODB_IMAGE:-mongo:latest}
    ports:
      - "${MONGODB_S1_PRIMARY_PORT:-17001}:27017"
    command: mongod --replSet rs1 --shardsvr --port 27017 --oplogSize 16
    links:
      - mongo-1-2:mongo-1-2
      - mongo-1-3:mongo-1-3
    networks:
      - monitoring

  mongo-1-2:
    container_name: "mongo-1-2"
    image: ${MONGODB_IMAGE:-mongo:latest}
    ports:
      - "${MONGODB_S1_SECONDARY1_PORT:-17002}:27017"
    command: mongod --replSet rs1 --shardsvr --port 27017 --oplogSize 16
    networks:
      - monitoring

  mongo-1-3:
    container_name: "mongo-1-3"
    image: ${MONGODB_IMAGE:-mongo:latest}
    ports:
      - "${MONGODB_S1_SECONDARY2_PORT:-17003}:27017"
    command: mongod --replSet rs1 --shardsvr --port 27017 --oplogSize 16
    networks:
      - monitoring

  mongo-rs1-setup:
    container_name: "mongo-rs1-setup"
    image: ${MONGODB_IMAGE:-mongo:latest}
    depends_on:
      - "mongo-1-1"
      - "mongo-1-2"
      - "mongo-1-3"
    links:
      - mongo-1-1:mongo-1-1
      - mongo-1-2:mongo-1-2
      - mongo-1-3:mongo-1-3
    volumes:
      - ./mongoscripts:/scripts
    environment:
      - MONGO1=mongo-1-1
      - MONGO2=mongo-1-2
      - MONGO3=mongo-1-3
      - RS=rs1
    entrypoint: [ "/scripts/setup.sh" ]
    networks:
      - monitoring

  mongo-2-2:
    container_name: "mongo-2-2"
    image: ${MONGODB_IMAGE:-mongo:latest}
    ports:
      - "${MONGODB_S2_PRIMARY_PORT:-17004}:27017"
    command: mongod --replSet rs2 --shardsvr --port 27017 --oplogSize 16
    networks:
      - monitoring

  mongo-2-3:
    container_name: "mongo-2-3"
    image: ${MONGODB_IMAGE:-mongo:latest}
    ports:
      - "${MONGODB_S2_SECONDARY1_PORT:-17005}:27017"
    command: mongod --replSet rs2 --shardsvr --port 27017 --oplogSize 16
    networks:
      - monitoring

  mongo-2-1:
    container_name: "mongo-2-1"
    image: ${MONGODB_IMAGE:-mongo:latest}
    ports:
      - "${MONGODB_S2_SECONDARY2_PORT:-17006}:27017"
    command: mongod --replSet rs2 --shardsvr --port 27017 --oplogSize 16
    links:
        - mongo-2-2:mongo-2-2
        - mongo-2-3:mongo-2-3
    networks:
      - monitoring

  mongo-rs2-setup:
    container_name: "mongo-rs2-setup"
    image: ${MONGODB_IMAGE:-mongo:latest}
    depends_on:
      - "mongo-2-1"
      - "mongo-2-2"
      - "mongo-2-3"
    links:
      - mongo-2-1:mongo-2-1
      - mongo-2-2:mongo-2-2
      - mongo-2-3:mongo-2-3
    volumes:
      - ./mongoscripts:/scripts
    environment:
      - MONGO1=mongo-2-1
      - MONGO2=mongo-2-2
      - MONGO3=mongo-2-3
      - RS=rs2
    entrypoint: [ "/scripts/setup.sh" ]
    networks:
      - monitoring

  # Config servers
  mongo-cnf-2:
    container_name: "mongo-cnf-2"
    image: ${MONGODB_IMAGE:-mongo:latest}
    ports:
      - "${MONGODB_CONFIGSVR1_PORT:-17007}:27017"
    command: mongod --dbpath /data/db --replSet cnf-serv --configsvr --port 27017 --oplogSize 16
    networks:
      - monitoring

  mongo-cnf-3:
    container_name: "mongo-cnf-3"
    image: ${MONGODB_IMAGE:-mongo:latest}
    ports:
      - "${MONGODB_CONFIGSVR2_PORT:-17008}:27017"
    command: mongod --dbpath /data/db --replSet cnf-serv --configsvr --port 27017 --oplogSize 16
    networks:
      - monitoring

  mongo-cnf-1:
    container_name: "mongo-cnf-1"
    image: ${MONGODB_IMAGE:-mongo:latest}
    ports:
      - "${MONGODB_CONFIGSVR3_PORT:-17009}:27017"
    command: mongod --dbpath /data/db --replSet cnf-serv --configsvr --port 27017 --oplogSize 16
    links:
      - mongo-cnf-2:mongo-cnf-2
      - mongo-cnf-3:mongo-cnf-3
    networks:
      - monitoring

  mongo-cnf-setup:
    container_name: "mongo-cnf-setup"
    image: ${MONGODB_IMAGE:-mongo:latest}
    depends_on:
      - "mongo-cnf-1"
      - "mongo-cnf-2"
      - "mongo-cnf-3"
    links:
      - mongo-cnf-1:mongo-cnf-1
      - mongo-cnf-2:mongo-cnf-2
      - mongo-cnf-3:mongo-cnf-3
    volumes:
      - ./mongoscripts:/scripts
    environment:
      - MONGO1=mongo-cnf-1
      - MONGO2=mongo-cnf-2
      - MONGO3=mongo-cnf-3
      - RS=cnf-serv
      - PORT=27017
    entrypoint: [ "/scripts/setup.sh" ]
    networks:
      - monitoring

  mongos:
    container_name: "mongos"
    image: ${MONGODB_IMAGE:-mongo:latest}
    ports:
      - "${MONGODB_MONGOS_PORT:-17000}:27017"
    depends_on:
      - "mongo-rs1-setup"
      - "mongo-rs2-setup"
      - "mongo-cnf-setup"
    external_links:
      - mongo-cnf-1:mongo-cnf-1
      - mongo-cnf-2:mongo-cnf-2
      - mongo-cnf-3:mongo-cnf-3
      - mongo-1-1:mongo-1-1
      - mongo-1-2:mongo-1-2
      - mongo-1-3:mongo-1-3
      - mongo-2-1:mongo-2-1
      - mongo-2-2:mongo-2-2
      - mongo-2-3:mongo-2-3
    command: mongos --configdb cnf-serv/mongo-cnf-1:27017,mongo-cnf-2:27017,mongo-cnf-3:27017 --port 27017 --bind_ip 0.0.0.0
    networks:
      - monitoring

  mongo-shard-setup:
    container_name: "mongo-shard-setup"
    image: ${MONGODB_IMAGE:-mongo:latest}
    depends_on:
      - "mongos"
    links:
      - mongos:mongos
    volumes:
      - ./mongoscripts:/scripts
    environment:
      - MONGOS=mongos
      - MONGO11=mongo-1-1
      - MONGO12=mongo-1-2
      - MONGO13=mongo-1-3
      - MONGO21=mongo-2-1
      - MONGO22=mongo-2-2
      - MONGO23=mongo-2-3
      - RS1=rs1
      - RS2=rs2
      - PORT=27017
      - PORT1=27017
      - PORT2=27017
      - PORT3=27017
    entrypoint: [ "/scripts/init-shard.sh" ]
    restart: on-failure:20
    networks:
      - monitoring

  mongo-express:
    image: 'mongo-express:latest'
    restart: unless-stopped
    ports:
      - '8081:8081'
    expose:
      - 8081
    depends_on:
      - "mongos"
    links:
      - mongos:mongos
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongos:27017/
    networks:
      - monitoring

  prometheus:
    image: 'prom/prometheus:latest'
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - '9090:9090'
    expose:
      - 9090
    networks:
      - monitoring

  grafana-enterprise:
    image: 'grafana/grafana-enterprise:latest'
    container_name: grafana
    restart: unless-stopped
    user: "472"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
      - ./grafana/plugins/:/var/lib/grafana/plugins/
    env_file:
      - ./grafana/config.monitoring
    depends_on:
      - prometheus
    ports:
      - '3000:3000'
    expose:
      - 3000
    networks:
      - monitoring